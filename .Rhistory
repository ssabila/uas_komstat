# Jalankan aplikasi
shinyApp(ui = ui, server = server)
library(shiny)
# Data contoh
set.seed(123)
Data_pasien <- data.frame(
Pasien = paste0("P", 1:20),
Usia = sample(30:70, 20, replace = TRUE),
TekananDarah = sample(110:180, 20, replace = TRUE)
)
# UI
ui <- fluidPage(
titlePanel("Hubungan Usia dan Tekanan Darah"),
sidebarLayout(
sidebarPanel(
helpText("Scatter plot, regresi linier, dan interpretasi sederhana.")
),
mainPanel(
plotOutput("scatterPlot"),
verbatimTextOutput("regressionResult"),
textOutput("interpretation"),
tableOutput("dataTable")
)
)
)
# Server
server <- function(input, output) {
output$scatterPlot <- renderPlot({
plot(Data_pasien$Usia, Data_pasien$TekananDarah,
pch = 16,
cex = 1.2,
xlab = "Usia (tahun)",
ylab = "Tekanan Darah Sistolik (mmHg)",
main = "Scatter plot Usia vs Tekanan Darah")
abline(lm(TekananDarah ~ Usia, data = Data_pasien), col = "blue", lty = 2)
})
output$regressionResult <- renderPrint({
summary(lm(TekananDarah ~ Usia, data = Data_pasien))
})
output$interpretation <- renderText({
model <- lm(TekananDarah ~ Usia, data = Data_pasien)
pval <- summary(model)$coefficients[2, 4]
if (pval < 0.05) {
paste0("Hasil uji regresi: p-value = ", round(pval, 3),
". Terdapat hubungan signifikan antara usia dan tekanan darah.")
} else {
paste0("Hasil uji regresi: p-value = ", round(pval, 3),
". Tidak terdapat hubungan signifikan antara usia dan tekanan darah.")
}
})
output$dataTable <- renderTable({
Data_pasien
})
}
# Jalankan aplikasi
shinyApp(ui = ui, server = server)
as.factor(HandCode)
# Mengkodekan Hand: Right = 1, Left = 0
Data$HandCode[Data$Hand == 'Right'] <- 1
Data$HandCode[Data$Hand == 'Left'] <- 0
Data$HandCode <- as.integer(Data$HandCode)
as.factor(HandCode)
# Tampilkan hasil
print(Data)
as.factor(HandCode)
library(coin)
symmetry_test(Length ~ HandCode | ID, data = Data_paired)
library("bootstrap")
x <- rnorm(20)
print(x)
theta <- function(x){
mean(x)
}
result <- bootstrap(x, 100, theta)
print(result)
persentil95 <- function(x){
quantile(x, .95)
}
result<- bootstrap(x, 100, theta, func = persentil95)
result
xdata <- matrix(rnorm(30),ncol=2)
xdata
n <- 15
theta <- function(x,xdata){
cor(xdata[x,1], xdata[x,2])
}
results <- bootstrap(1:n,20,theta,xdata)
results
x <- rnorm(20)
x
theta <- function(x){
mean(x)
}
results <- jackknife(x,theta)
results
xdata <- matrix(rnorm(30),ncol=2)
xdata
n <- 15
theta <- function(x,xdata){
cor(xdata[x,1], xdata[x,2])
}
results <- jackknife(1:n,theta,xdata)
results
library("FSA")
library("coin")
# Load data dan menyimpan dalam format dataframe
# Membuat data dalam format teks
Input <- "
Individual Hand Length
A Left 17.5
B Left 17.5
C Left 18.4
D Left 16.2
E Left 14.5
F Left 13.5
G Left 18.9
H Left 19.5
I Left 21.1
M Left 17.8
M Left 16.8
M Left 18.4
M Left 17.3
N Left 18.9
N Left 16.4
O Left 17.5
P Left 15.0
A Right 17.6
B Right 18.5
C Right 15.9
D Right 14.9
E Right 13.7
F Right 18.9
G Right 19.5
H Right 21.5
I Right 18.5
J Right 17.1
K Right 18.9
L Right 17.5
M Right 19.5
N Right 16.5
O Right 17.4
P Right 15.6
"
# Membaca data sebagai dataframe
Data <- read.table(textConnection(Input), header = TRUE)
# Memeriksa isi data
print(Data)
str(Data)
summary(Data)
# Menghapus objek Input agar tidak memenuhi environment
rm(Input)
# Memasang package 'doBy' untuk fungsi Summarize (jika belum terpasang)
if (!require(doBy)) install.packages("doBy")
library(doBy)
# Membuat ringkasan statistik Length berdasarkan Hand
Summarize(Length ~ Hand, data = Data, digits = 3)
# Mengkodekan Hand: Right = 1, Left = 0
Data$HandCode[Data$Hand == 'Right'] <- 1
Data$HandCode[Data$Hand == 'Left'] <- 0
Data$HandCode <- as.integer(Data$HandCode)
# Menambahkan ID urut
Data$ID <- seq_along(Data$Individual)
# Tampilkan hasil
print(Data)
#Uji Permutasi untuk independensi
independence_test(Length ~ HandCode, data = Data)
#Visualisasi data dengan boxplot
boxplot(Length ~ Hand,data=Data,ylab="Length, cm")
library(coin)
symmetry_test(Length ~ HandCode | ID, data = Data_paired)
library(coin)
symmetry_test(Length ~ HandCode | ID, data = Data)
# Mengkodekan Hand: Right = 1, Left = 0
Data$HandCode[Data$Hand == 'Right'] <- 1
Data$HandCode[Data$Hand == 'Left'] <- 0
#Data$HandCode <- as.integer(Data$HandCode)
# Menambahkan ID urut
Data$ID <- seq_along(Data$Individual)
# Tampilkan hasil
print(Data)
# Load data dan menyimpan dalam format dataframe
# Membuat data dalam format teks
Input <- "
Individual Hand Length
A Left 17.5
B Left 18.4
C Left 16.2
D Left 14.5
E Left 13.5
F Left 18.9
G Left 19.5
H Left 21.1
I Left 17.8
J Left 16.8
K Left 18.4
L Left 17.3
M Left 18.9
N Left 16.4
O Left 17.5
P Left 15.0
A Right 17.6
B Right 18.5
C Right 15.9
D Right 14.9
E Right 13.7
F Right 18.9
G Right 19.5
H Right 21.5
I Right 18.5
J Right 17.1
K Right 18.9
L Right 17.5
M Right 19.5
N Right 16.5
O Right 17.4
P Right 15.6
"
# Membaca data sebagai dataframe
Data <- read.table(textConnection(Input), header = TRUE)
# Memeriksa isi data
print(Data)
str(Data)
summary(Data)
# Menghapus objek Input agar tidak memenuhi environment
rm(Input)
# Memasang package 'doBy' untuk fungsi Summarize (jika belum terpasang)
if (!require(doBy)) install.packages("doBy")
library(doBy)
# Membuat ringkasan statistik Length berdasarkan Hand
Summarize(Length ~ Hand, data = Data, digits = 3)
# Mengkodekan Hand: Right = 1, Left = 0
Data$HandCode[Data$Hand == 'Right'] <- 1
Data$HandCode[Data$Hand == 'Left'] <- 0
Data$HandCode <- as.integer(Data$HandCode)
# Menambahkan ID urut
Data$ID <- seq_along(Data$Individual)
# Tampilkan hasil
print(Data)
#Uji Permutasi untuk independensi
independence_test(Length ~ HandCode, data = Data)
#Visualisasi data dengan boxplot
boxplot(Length ~ Hand,data=Data,ylab="Length, cm")
library(coin)
symmetry_test(Length ~ HandCode | ID, data = Data)
# Mengkodekan Hand: Right = 1, Left = 0
Data$HandCode[Data$Hand == 'Right'] <- 1
Data$HandCode[Data$Hand == 'Left'] <- 0
#Data$HandCode <- as.integer(Data$HandCode)
# Menambahkan ID urut
Data$ID <- seq_along(Data[,1])
# Tampilkan hasil
print(Data)
#Uji Permutasi untuk independensi
independence_test(Length ~ HandCode, data = Data)
#Visualisasi data dengan boxplot
boxplot(Length ~ Hand,data=Data,ylab="Length, cm")
library(coin)
symmetry_test(Length ~ HandCode | ID, data = Data)
library(coin)
#symmetry_test(Length ~ HandCode | ID, data = Data)
## Visualisasi data dengan scatter plot
Left <- Data$Length[Data$Hand == "Left"]
Right <- Data$Length[Data$Hand == "Right"]
plot(Left, Right,
pch = 16,            # Bentuk titik plot (bulat penuh)
cex = 1.0,           # Ukuran titik plot
xlim = c(13, 22),    # Rentang sumbu x
ylim = c(13, 22),    # Rentang sumbu y
xlab = "Left hand",  # Label sumbu x
ylab = "Right hand"  # Label sumbu y
)
abline(0, 1, lty = 1)     # Garis y = x (referensi)
shiny::runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP')
library(haven)
T14.1 <- read_sav("T14.1.sav")
T14.2 <- read_sav("T14.2.sav")
T14.3 <- read_sav("T14.3.sav")
Y <- T14.1$Q
X <- T14.1$t
#melakukan transformasi untuk kedua variabel
ln_Y<-log(Y)                  # Tranformasi Ln pada variabel Y
ln_X<-log(X)                  # Tranformasi Ln pada variabel X
#Plot antara X dan Y (tanpa transformasi)
plot(x = X, y = Y,
xlab     = "Tahun",
ylab     = "Produksi perikanan laut yang dijual di TPI (ton)",
main     = "Scatter Plot antara Tahun dan Produksi perikanan laut yang dijual di TPI (ton)",
cex.main = 1)
#Plot antara X dan Y (setelah transformasi)
plot(x = ln_X, y = ln_Y,
xlab     = "ln(Tahun)",
ylab     = "ln(Produksi perikanan laut yang dijual di TPI)",
main     = "Scatter Plot antara ln(Tahun) dan ln(Produksi perikanan laut yang dijual di TPI)",
cex.main = 1)
Model1 <- lm(ln_Y~ln_X)
summary(Model1)
Y <- T14.1$Q
X <- T14.1$t
#melakukan transformasi untuk kedua variabel
ln_Y<-log(Y)                  # Tranformasi Ln pada variabel Y
#Plot antara X dan Y (tanpa transformasi)
plot(x = X, y = Y,
xlab     = "Tahun",
ylab     = "Produksi perikanan laut yang dijual di TPI (ton)",
main     = "Scatter Plot antara Tahun dan Produksi perikanan laut yang dijual di TPI (ton)",
cex.main = 1)
#Plot antara X dan Y (setelah transformasi)
plot(x = X, y = ln_Y,
xlab     = "ln(Tahun)",
ylab     = "ln(Produksi perikanan laut yang dijual di TPI)",
main     = "Scatter Plot antara ln(Tahun) dan ln(Produksi perikanan laut yang dijual di TPI)",
cex.main = 1)
Model1 <- lm(ln_Y~X)
summary(Model1)
X <- T14.1$t  #melakukan transformasi untuk kedua variabel  ln_Y<-log(Y)                  # Tranformasi Ln pada variabel Y
Y <- T14.2$Q
X1 <- T14.2$C
X2 <- T14.2$L
#melakukan transformasi untuk kedua variabel
ln_Y<-log(Y)                  # Tranformasi Ln pada variabel Y
ln_X1<-log(X1)                  # Tranformasi Ln pada variabel X1
ln_X2<-log(X2)                  # Tranformasi Ln pada variabel X2
#Plot antara X dan Y (tanpa transformasi)
plot(x = X1, y = Y,      xlab     = "Input Tenaga Kerja",      ylab     = "Output",      main     = "Scatter Plot antara Input Jam Kerja dengan Output",      cex.main = 1)
plot(x = X2, y = Y,      xlab     = "Input Tenaga Kerja",      ylab     = "Output",      main     = "Scatter Plot antara Input Tenaga Kerja dengan Output",      cex.main = 1)
#Plot antara X dan Y (setelah transformasi)
plot(x = ln_X1, y = ln_Y,      xlab     = "Ln Input Tenaga Kerja",      ylab     = "Ln Output",      main     = "Scatter Plot antara Ln Input Jam Kerja dengan Ln Output",      cex.main = 1)
plot(x = ln_X2, y = ln_Y,      xlab     = "Ln Input Tenaga Kerja",      ylab     = "Ln Output",      main     = "Scatter Plot antara Ln Input Tenaga Kerja dengan Ln Output",      cex.main = 1)
Model1 <- lm(ln_Y~ln_X1+ln_X2)
summary(Model1)
#Plot antara X dan Y (tanpa transformasi)
plot(x = X1, y = Y,      xlab     = "Input Modal",      ylab     = "Output",      main     = "Scatter Plot antara Input Modal dengan Output",      cex.main = 1)
plot(x = X2, y = Y,      xlab     = "Input Tenaga Kerja",      ylab     = "Output",      main     = "Scatter Plot antara Input Tenaga Kerja dengan Output",      cex.main = 1)
#Plot antara X dan Y (setelah transformasi)
plot(x = ln_X1, y = ln_Y,      xlab     = "Ln Input Modal",      ylab     = "Ln Output",      main     = "Scatter Plot antara Ln Input Modal dengan Ln Output",      cex.main = 1)
plot(x = ln_X2, y = ln_Y,      xlab     = "Ln Input Tenaga Kerja",      ylab     = "Ln Output",      main     = "Scatter Plot antara Ln Input Tenaga Kerja dengan Ln Output",      cex.main = 1)
Model2 <- lm(ln_Y~ln_X1+ln_X2)
summary(Model1)
anova(Model2)
Y <- T14.3$Y
X <- T14.3$X
#transformasi
sfdho <- Y/X
ln_X <- ln(X)
Y <- T14.3$Y
X <- T14.3$X
#transformasi
sfdho <- Y/X
ln_X <- log(X)
#Plot antara X dan Y (tanpa transformasi)
plot(x = X, y = Y,      xlab     = "Pengeluaran Rumah Tangga secara Total",      ylab     = "Konsumsi Makanan dan Minuman Tanpa Alkohol",      main     = "Scatter Plot antara Pengeluaran Rumah Tangga secara Total dengan Konsumsi Maknan dan Minuman Tanpa Alkohol",      cex.main = 1)
#Plot antara X dan Y (setelah transformasi)
plot(x = ln_X, y = sfdho,      xlab     = "Ln Pengeluaran Rumah Tangga secara Total",      ylab     = "Prorporsi Konsumsi Makanan dan Minuman Tanpa Alkohol",      main     = "Scatter Plot antara Ln Pengeluaran Rumah Tangga secara Total dengan Proporsi Konsumsi Maknan dan Minuman Tanpa Alkohol",      cex.main = 1,      cex.main = 1)
Model3 <- lm(sfdho~ln_X)
summary(Model3)
library(haven)
T14.1 <- read_sav("T14.1.sav")
T14.2 <- read_sav("T14.2.sav")
T14.3 <- read_sav("T14.3.sav")
Y <- T14.1$Q
X <- T14.1$t
#melakukan transformasi untuk kedua variabel
ln_Y<-log(Y)                  # Tranformasi Ln pada variabel Y
#Plot antara X dan Y (tanpa transformasi)
plot(x = X, y = Y,
xlab     = "Tahun",
ylab     = "Produksi perikanan laut yang dijual di TPI (ton)",
main     = "Scatter Plot antara Tahun dan Produksi perikanan laut yang dijual di TPI (ton)",
cex.main = 1)
#Plot antara X dan Y (setelah transformasi)
plot(x = X, y = ln_Y,
xlab     = "ln(Tahun)",
ylab     = "ln(Produksi perikanan laut yang dijual di TPI)",
main     = "Scatter Plot antara ln(Tahun) dan ln(Produksi perikanan laut yang dijual di TPI)",
cex.main = 1)
Model1 <- lm(ln_Y~X)
summary(Model1)
Y <- T14.2$Q
X1 <- T14.2$C
X2 <- T14.2$L
#melakukan transformasi untuk kedua variabel
ln_Y<-log(Y)                  # Tranformasi Ln pada variabel Y
ln_X1<-log(X1)                  # Tranformasi Ln pada variabel X1
ln_X2<-log(X2)                  # Tranformasi Ln pada variabel X2
#Plot antara X dan Y (tanpa transformasi)
plot(x = X1, y = Y,      xlab     = "Input Modal",      ylab     = "Output",      main     = "Scatter Plot antara Input Modal dengan Output",      cex.main = 1)
plot(x = X2, y = Y,      xlab     = "Input Tenaga Kerja",      ylab     = "Output",      main     = "Scatter Plot antara Input Tenaga Kerja dengan Output",      cex.main = 1)
#Plot antara X dan Y (setelah transformasi)
plot(x = ln_X1, y = ln_Y,      xlab     = "Ln Input Modal",      ylab     = "Ln Output",      main     = "Scatter Plot antara Ln Input Modal dengan Ln Output",      cex.main = 1)
plot(x = ln_X2, y = ln_Y,      xlab     = "Ln Input Tenaga Kerja",      ylab     = "Ln Output",      main     = "Scatter Plot antara Ln Input Tenaga Kerja dengan Ln Output",      cex.main = 1)
Model2 <- lm(ln_Y~ln_X1+ln_X2)
summary(Model1)
Y <- T14.3$Y
X <- T14.3$X
#transformasi
sfdho <- Y/X
ln_X <- log(X)
#Plot antara X dan Y (tanpa transformasi)
plot(x = X, y = Y,      xlab     = "Pengeluaran Rumah Tangga secara Total",      ylab     = "Konsumsi Makanan dan Minuman Tanpa Alkohol",      main     = "Scatter Plot antara Pengeluaran Rumah Tangga secara Total dengan Konsumsi Maknan dan Minuman Tanpa Alkohol",      cex.main = 1)
#Plot antara X dan Y (setelah transformasi)
plot(x = ln_X, y = sfdho,      xlab     = "Ln Pengeluaran Rumah Tangga secara Total",      ylab     = "Prorporsi Konsumsi Makanan dan Minuman Tanpa Alkohol",      main     = "Scatter Plot antara Ln Pengeluaran Rumah Tangga secara Total dengan Proporsi Konsumsi Maknan dan Minuman Tanpa Alkohol",      cex.main = 1,      cex.main = 1)
Model3 <- lm(sfdho~ln_X)
summary(Model3)
#Plot antara X dan Y (tanpa transformasi)
plot(x = X, y = Y,
xlab     = "Pengeluaran Rumah Tangga secara Total",
ylab     = "Konsumsi Makanan dan Minuman Tanpa Alkohol",
main     = "Scatter Plot antara Pengeluaran Rumah Tangga secara Total dengan
Konsumsi Maknan dan Minuman Tanpa Alkohol",
cex.main = 1)
#Plot antara X dan Y (setelah transformasi)
plot(x = ln_X, y = sfdho,
xlab     = "Ln Pengeluaran Rumah Tangga secara Total",
ylab     = "Prorporsi Konsumsi Makanan dan Minuman Tanpa Alkohol",
main     = "Scatter Plot antara Ln Pengeluaran Rumah Tangga secara Total dengan
Proporsi Konsumsi Maknan dan Minuman Tanpa Alkohol",
cex.main = 1,      cex.main = 1)
library(shiny); runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP/apl/app1.R')
runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP/apl/app1.R')
runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP/apl/app1.R')
runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP/apl/app1.R')
runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP/apl/app1.R')
runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP/apl/app1.R')
runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP/apl/app1.R')
runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP/apl/app1.R')
runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP/apl/app1.R')
runApp('E:/2KS2_SABILA/SEM 4/KOMSTAT/PROJECTS/APP/apl/app1.R')
library(ggplot2)
library(plotly)
library(car)  # For Levene's test if needed
library(dplyr)  # For data manipulation
library(DT)  # For data tables
shiny::runApp('E:/2KS2_SABILA/komstatuas')
library(shiny)
library(shinydashboard)
library(DT)
library(plotly)
library(leaflet)
library(dplyr)
library(ggplot2)
library(readr)
library(htmltools)
library(shinyjs)
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
shiny::runApp('E:/2KS2_SABILA/komstatuas')
library(shiny)
library(shinydashboard)
library(DT)
library(plotly)
library(leaflet)
library(dplyr)
library(ggplot2)
library(readr)
library(htmltools)
library(shinyjs)
runApp('E:/2KS2_SABILA/komstatuas')
library(ggplot2)
library(plotly)
library(car)  # For Levene's test if needed
library(dplyr)  # For data manipulation
library(DT)  # For data tables
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
library(shiny)
library(shinydashboard)
library(DT)
library(plotly)
library(leaflet)
library(dplyr)
library(ggplot2)
library(readr)
library(htmltools)
library(shinyjs)
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
shiny::runApp('E:/2KS2_SABILA/komstatuas')
# Load required libraries
library(shiny)
library(shinydashboard)
library(DT)
library(plotly)
library(leaflet)
library(dplyr)
library(ggplot2)
library(readr)
library(htmltools)
library(shinyjs)
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
runApp('E:/2KS2_SABILA/komstatuas')
setwd("E:/2KS2_SABILA/komstatuas")
runApp()
runApp()
runApp()
